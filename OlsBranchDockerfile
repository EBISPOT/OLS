#  Use Alpine base, and build up components from there

FROM amd64/alpine:3.7.3

ARG ols_branch
ARG ols_commit=HEAD

RUN mkdir /opt

ENV REM=""
ENV SOLR_VERSION_NO="5.5.5"
ENV TOMCAT_VERSION_NO="8.5.47"
ENV PATH="/opt/ols/solr-${SOLR_VERSION_NO}/bin:/opt/ols/apache-tomcat-${TOMCAT_VERSION_NO}/bin:${PATH}"

RUN apk update && \
    apk add openjdk8 maven procps bash wget git emacs less lsof lynx sudo \
            shadow mongodb supervisor grep

#  Create non-root-privileged user 'ols'; set up directories for Solr and Tomcat
RUN groupadd ols && useradd -rmg ols ols && mkdir /opt/ols && chown ols:ols /opt/ols

USER ols
WORKDIR /home/ols/

#  Download and install Tomcat 8
RUN wget http://mirrors.ukfast.co.uk/sites/ftp.apache.org/tomcat/tomcat-8/v${TOMCAT_VERSION_NO}/bin/apache-tomcat-${TOMCAT_VERSION_NO}.tar.gz
RUN tar -C /opt/ols/ -zxvf apache-tomcat-${TOMCAT_VERSION_NO}.tar.gz

#  Download and install Solr
RUN wget "http://archive.apache.org/dist/lucene/solr/${SOLR_VERSION_NO}/solr-${SOLR_VERSION_NO}.tgz"
RUN tar -C /opt/ols/ -zxvf solr-${SOLR_VERSION_NO}.tgz

#  Not strictly necessary if importing OLS configs from GitHub, unless the
#  latter require subsequent modification anyway. Which is of course quite
#  likely, so swings and roundabouts ...
#
COPY --chown=ols:ols ./ols-solr/src/main/solr-5-config /home/ols/ols-solr-config
RUN mkdir -p ./.ols/solr/autosuggest && mkdir ./.ols/solr/ontology && mkdir ./.ols/neo4j

#  Import OLS from GitHub, and build it with Maven
RUN git clone -b ${ols_branch} --single-branch https://github.com/EBISPOT/OLS.git

RUN cd ./OLS && \
    git checkout ${ols_commit} && \
    printf "\nols.home=/home/ols/.ols\n" >> ./ols-web/src/main/resources/application.properties && \
    mvn clean install ${REM# -Dmaven.test.skip=true : Surefire 2.21+ is broken on Alpine, at least without procps} && \
    cp -v ./ols-web/target/ols-boot.war /opt/ols/apache-tomcat-${TOMCAT_VERSION_NO}/webapps/

USER root
COPY ./supervisord.conf /etc/
COPY ./supervisord_tomcat_conf.txt /tmp/
RUN cat /etc/supervisord.conf /tmp/supervisord_tomcat_conf.txt >> /etc/supervisord_with_tomcat.conf && \
    rm /tmp/supervisord_tomcat_conf.txt

#  Probably, better not to use CMD, which gets overriden by runtime arguments (arguments passed to 'docker run');
#  because runtime arguments are useful (e.g. do we want to run tomcat or not?), we'll invoke ENTRYPOINT instead
COPY entrypoint.sh /root/
ENTRYPOINT ["/root/entrypoint.sh"]

#  Ultimately, we may want to run the container in detached mode: might be possible to run 'docker -exec'; otherwise start an ssh server
